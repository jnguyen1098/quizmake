::Q1::[html]What is the name of this University?
{ =University of Guelph # Correct! This school is an amalgamation of the OVC, OAC, and MacDonald Institute. ~University of Waterloo # Close, but not quite. A lot of CS Co-op kids do tend to work around Waterloo though. ~Brock University # Nope, pretty far away from Brock. ~University of Western Ontario # No, London is pretty far away}

::Q2::[html]Why won't this program compile?<br><br>\#include &lt;stdio.h&gt;<br><br>int main(void)<br>\{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;double string[] \= "That that is, is; that that is not, is not; is that it? It is.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("%s\\n", string);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return 0;<br>\}
{ =The primitive datatype used was double, but you need a char array to declare a string like that. # Correct. That is not how we initialize strings. ~The programmer should have \#include'd &lt;stdlib.h&gt; # Nope. We don't need that to initialize strings. ~The program works fine! # It really doesn't, and you can compile it to make sure of this.}

::Q3::[html]What's wrong with this program?<br><br>\#include &lt;stdio.h&gt;<br><br>int main(void)<br>\{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string1[] \= "The quick brown fox jumped over the lazy dog.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string2[] \= "That that is, is; that that is not, is not; is that it? It is.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string3[] \= "Linux is only free if your time has no value.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string4[] \= "That that is, is; that that is not, is not; is that it? It is.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string5[] \= "Time flies like an arrow; fruit flies like a banana.";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string6[] \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string7[] \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string8[] \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string9[] \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;char string9[] \= "Time flies like an arrow; fruit flies like a banana.";<br>\}
{ =string9 is declared twice. # Correct. Each identifier, when newly-declared, must be unique. ~The program works fine! # It really doesn't, and you can compile it to make sure of this.}

::Q4::[html]What's wrong with this program?<br><br>\#include &lt;stdio.h&gt;<br><br>int main(void)<br>\{<br>&nbsp;&nbsp;&nbsp;&nbsp;char string1 \= "That that is, is; that that is not, is not; is that it? It is.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string2 \= "That that is, is; that that is not, is not; is that it? It is.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string3 \= "That that is, is; that that is not, is not; is that it? It is.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string4 \= "That that is, is; that that is not, is not; is that it? It is.";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;char string5 \= "The quick brown fox jumped over the lazy dog.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string6 \= "The quick brown fox jumped over the lazy dog.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string7 \= "The quick brown fox jumped over the lazy dog.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string8 \= "The quick brown fox jumped over the lazy dog.";<br><br>&nbsp;&nbsp;&nbsp;&nbsp;char string9 \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string10 \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string11 \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string12 \= "Time flies like an arrow; fruit flies like a banana.";<br>\}
{ =The strings need the "[]" to represent array notation for strings. # Correct. ~The program works fine! # It really doesn't, and you can compile it to make sure of this.}

::Q5::[html]Which string will print?<br><br>\#include &lt;stdio.h&gt;<br><br>int main(void)<br>\{<br>&nbsp;&nbsp;&nbsp;&nbsp;int n \= 10;<br>&nbsp;&nbsp;&nbsp;&nbsp;int m \= 11;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;if (n &gt; m) \{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("Linux is only free if your time has no value.\\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;\}<br><br>&nbsp;&nbsp;&nbsp;&nbsp;else \{<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("That that is, is; that that is not, is not; is that it? It is.\\n");<br>&nbsp;&nbsp;&nbsp;&nbsp;\}<br>\}
{ =That that is, is; that that is not, is not; is that it? It is. # Yes, because n is bigger than m. ~Linux is only free if your time has no value. # No. Trace the program again.}

::Q6::[html]Will this program compile?<br><br>\#include &lt;stdio.h&gt;<br><br>int main(void)<br>\{<br>&nbsp;&nbsp;&nbsp;&nbsp;char string1[] \= "Time flies like an arrow; fruit flies like a banana.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string2[] \= "Linux is only free if your time has no value.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string3[] \= "The quick brown fox jumped over the lazy dog.";<br>&nbsp;&nbsp;&nbsp;&nbsp;char string4[] \= "That that is, is; that that is not, is not; is that it? It is.";<br>\}
{ =Yes. # Yup. Nothing wrong with it. ~No. # Compile it yourself!}

::Q7::[html]What's wrong with this program?<br><br>\#include &lt;stdio.h&gt;<br><br>int main(void)<br>\{<br>&nbsp;&nbsp;&nbsp;&nbsp;int foo \= "The quick brown fox jumped over the lazy dog.";<br>&nbsp;&nbsp;&nbsp;&nbsp;return 0;<br>\}
{ =bar is an integer but the programmer is trying to initialize a string. # Correct. C is very strict on type-checking. ~There's nothing wrong with the program. # Compile it yourself!}

